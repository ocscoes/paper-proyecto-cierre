# Resultados

```{r}
#| echo: false

## cargar base

load("input/proc/datos-completos.rdata")
load("input/proc/micro-macro-merge.rdata")

datos_merge_b <- datos_merge_b |>
  mutate(across(where(haven::is.labelled), ~ vctrs::vec_data(.)),
         pais= as.factor(pais))

datos_merge_b$country_wave = do.call(paste, c(datos_merge_b[c("pais", "ola")], sep = "_"))

```

## Descriptivos

```{r}
#| label: fig-ch
#| fig-cap: Evolución dimensiones Cohesión Horizontal (2004-2022)


olas <- datos_merge_b |>
  group_by(ola) |>
  summarise(seguridad_prom = mean(seguridad_ind, na.rm=T),
            confianza_prom = mean(confianza_it_ind, na.rm=T)) |>
  pivot_longer(
    cols = c(confianza_prom, seguridad_prom),
    names_to = "indicador",
    values_to = "promedio"
  ) |>
  mutate(indicador = recode(indicador,
                            "confianza_prom" = "Confianza Interpersonal",
                            "seguridad_prom" = "Seguridad Pública"))
olas |>
  ggplot(aes(x = ola, y = promedio, color=indicador)) +
  geom_line(linewidth = 1) +
  geom_point() +
  labs(x = "Ola", y = "Promedio", color=NULL) +
  theme_minimal() + 
  theme(legend.position = "bottom")

```


```{r}
#| label: fig-cv
#| fig-cap: Evolución dimensiones Cohesión Vertical (2004-2022)

olas <- datos_merge_b |>
  group_by(ola) |>
  summarise(confianza_prom = mean(confianza_inst_ind, na.rm=T),
            democracia_prom = mean(democracia_ind, na.rm=T)) |>
  pivot_longer(
    cols = c(confianza_prom, democracia_prom),
    names_to = "indicador",
    values_to = "promedio"
  ) |>
  mutate(indicador = recode(indicador,
                            "confianza_prom" = "Confianza en las Instituciones",
                            "democracia_prom" = "Actitudes hacia la democracia"))
olas |>
  ggplot(aes(x = ola, y = promedio, color=indicador)) +
  geom_line(linewidth = 1) +
  geom_point() +
  labs(x = "Ola", y = "Promedio", color=NULL) +
  theme_minimal() + 
  theme(legend.position = "bottom")

```

## Análisis Factorial Confirmatorio

```{r}
#| eval: false


m1 <- 'ch =~ seguridad_ind + confianza_it_ind
       cv =~ confianza_inst_ind + democracia_ind'

m1_cfa <- cfa(
  m1, data = datos_merge_b, std.lv = TRUE)

save(m1_cfa, file="output/cfa.rdata")
```



```{r}
#| label: afc
#| fig-cap: Análisis Factorial Confirmatorio Modelo de Medición de Cohesión Social

load("output/cfa.rdata")

semPaths(m1_cfa,
         what = "std",
        label.cex = 1, edge.label.cex = 1, # tamaño flechas y caracteres
        residuals = FALSE, # no mostrar residuos
        edge.color = "black") # color flechas

fit <- fitmeasures(m1_cfa, fit.measures = c("rmsea", "cfi", "chisq", "pvalue", "df"))
```



Nota. RMSEA = `r round(fit["rmsea"], 3)`, CFI = `r round(fit["cfi"], 3)`, Chi-cuadrado = `r round(fit["chisq"], 2)`, gl = `r fit["df"]`, p-valor = `r round(fit["pvalue"], 3)`.


```{r}
#| label: fig-cs
#| tab-cap: Evolución dimensiones Cohesión Social (2004-2022)

olas <- datos_merge_b |>
  group_by(ola) |>
  summarise(horizontal_prom = mean(`cohesion_horizontal_ind`, na.rm=T),
            vertical_prom = mean(`cohesion_vertical_ind`, na.rm=T),
            cohesion_prom = mean(`cohesion_general_ind`, na.rm=T)) |>
  pivot_longer(
    cols = c(horizontal_prom, vertical_prom, cohesion_prom),
    names_to = "indicador",
    values_to = "promedio"
  ) |>
  mutate(indicador = recode(indicador,
                            horizontal_prom = "Cohesión Horizontal",
                            vertical_prom = "Cohesión Vertical",
                            cohesion_prom = "Cohesión Social"))

olas |>
  ggplot(aes(x = ola, y = promedio, color=indicador)) +
  geom_line(linewidth = 1) +
  geom_point() +
  labs(x = "Ola", y = "Promedio", color=NULL) +
  theme_minimal() + 
  theme(legend.position = "bottom")

```

## Modelos Multinivel

```{r}
#| label: preparacion-datos
#| eval: false



z <- function(x) as.numeric(scale(x))

datos_fit <- datos_merge_b %>%
    filter(edad >= 18) |>
  mutate(
    pib_we  = z(pib_we),   gini_we = z(gini_we), wgi_we = z(wgi_we), dem_we = z(dem_we),
    mig_we  = z(mig_we),   edu_we = z(edu_we),
    pib_be  = z(pib_be),   gini_be = z(gini_be), wgi_be = z(wgi_be), dem_be = z(dem_be),
    mig_be  = z(mig_be),   edu_be = z(edu_be),
    edad_c = scale(edad) %>% as.numeric(),
    ola_s = as.numeric(scale(ola, center = TRUE, scale = TRUE)),
    
    nivel_educ   = forcats::fct_drop(factor(nivel_educ)),
    pos_politica = forcats::fct_drop(factor(pos_politica)),
    sexo         = forcats::fct_drop(factor(sexo)),
    pais         = forcats::fct_drop(factor(pais)),
    country_wave = forcats::fct_drop(factor(country_wave)),

    # --- cambiar categoría de referencia ---
    nivel_educ   = forcats::fct_relevel(nivel_educ, "Tertiary"),   # ejemplo
    pos_politica = forcats::fct_relevel(pos_politica, "Not declared")         # ejemplo
  ) |>
  select(cohesion_general_ind, cohesion_vertical_ind, cohesion_horizontal_ind,
         nivel_educ, sexo, edad_c, ola_s, pos_politica,
         pib_we, gini_we, dem_we, wgi_we, mig_we, edu_we,
         pib_be, gini_be, dem_be, wgi_be, mig_be, edu_be,
         country_wave, pais, wt) |>
  na.omit()



```

**Modelos Nulos**


```{r}
#| eval: false

m0_ch = lmer(cohesion_horizontal_ind ~ 1 + (1 | country_wave) + (1 |pais), data=datos_fit, weights=wt)

icc(m0_ch, by_group=TRUE) # 2.3% y 5.6%

m0_cv = lmer(cohesion_vertical_ind ~ 1 + (1 | country_wave) + (1 |pais), data=datos_fit, weights=wt)

icc(m0_cv, by_group=TRUE) # 6.3% y 6.3%

m0_cs = lmer(cohesion_general_ind ~ 1 + (1 | country_wave) + (1 |pais), data=datos_fit, weights=wt)

icc(m0_cs, by_group=TRUE) # 4.9% y 7.5%

save(m0_ch, file="output/modelo_nulo_horizontal.rdata")
save(m0_cv, file="output/modelo_nulo_vertical.rdata")
save(m0_cs, file= "output/modelo_nulo_completo.rdata")

```


```{r}
#| label: modelos-nulos

load("output/modelo_nulo_horizontal.rdata")
load("output/modelo_nulo_vertical.rdata")
load( "output/modelo_nulo_completo.rdata")
```


## Cohesión Horizontal

```{r}
#| eval: false


# Modelo 1: Nivel individual
m1_h <- lmer(cohesion_horizontal_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + ola_s + (1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)

# Modelo 2: Nivel Ola Pais
m2_h <- lmer(cohesion_horizontal_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + ola_s + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
(1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)


# Modelo 3: Nivel País
m3_h <- lmer(cohesion_horizontal_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + ola_s + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
(1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)

# Modelo 4: Interacciones
m4_h <- lmer(cohesion_horizontal_ind ~ 1 + ola_s + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we + 
  (1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)

save(m1_h, file="output/modelo_horizontal_1.rdata")
save(m2_h, file="output/modelo_horizontal_2.rdata")
save(m3_h, file= "output/modelo_horizontal_3.rdata")
save(m4_h, file= "output/modelo_horizontal_4.rdata")
```

```{r}
#| label: tbl-modelos-horizontal
#| tbl-cap: Modelos para cohesión horizontal 
#| results: asis

load("output/modelo_horizontal_1.rdata")
load("output/modelo_horizontal_2.rdata")
load("output/modelo_horizontal_3.rdata")
load("output/modelo_horizontal_4.rdata")

sjPlot::tab_model(m1_h, m2_h, m3_h, m4_h,
                  show.ci = FALSE,
                  dv.labels = c("m1", "m2", "m3", "m4"))

```


```{r}
#| eval: false

p_load(influence.ME)

estex.cw <- influence(m4, "country_wave")
estex.c <- influence(m4, "pais")

# Casos influyentes a nivel ola-país

cooks_cw <- cooks.distance(estex.cw, sort = T)
cut_cw <- 4/sqrt(130)

plot(estex.cw, which="cook",
     cutoff=cut_cw, sort=TRUE)

# Influyentes a nivel país

cut_c <- 4/sqrt(22)

plot(estex.c, which="cook",
     cutoff=cut_c, sort=TRUE)
```


## Cohesión Vertical

```{r}
#| eval: false

# Modelo 1: Nivel individual
m1_v <- lmer(cohesion_vertical_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + ola_s + (1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)

# Modelo 2: Nivel Ola Pais
m2_v <- lmer(cohesion_vertical_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + ola_s + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
(1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)


# Modelo 3: Nivel País
m3_v <- lmer(cohesion_vertical_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + ola_s + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
(1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)

# Modelo 4: Interacciones
m4_v <- lmer(cohesion_vertical_ind ~ 1 + ola_s + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we + 
  (1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)


save(m1_v, file="output/modelo_vertical_1.rdata")
save(m2_v, file="output/modelo_vertical_2.rdata")
save(m3_v, file="output/modelo_vertical_3.rdata")
save(m4_v, file="output/modelo_vertical_4.rdata")
```

```{r}
#| label: tbl-modelos-vertical
#| tbl-cap: Modelos para cohesión vertical
#| results: asis

load("output/modelo_vertical_1.rdata")
load("output/modelo_vertical_2.rdata")
load("output/modelo_vertical_3.rdata")
load("output/modelo_vertical_4.rdata")

sjPlot::tab_model(m1_v, m2_v, m3_v, m4_v,
                  show.ci = FALSE,
                  dv.labels = c("m1", "m2", "m3", "m4"))
```


```{r}
#| eval: false

estex.cw <- influence(m4, "country_wave")
estex.c <- influence(m4, "pais")

# Casos influyentes a nivel ola-país

cooks_cw <- cooks.distance(estex.cw, sort = T)
cut_cw <- 4/sqrt(130)

plot(estex.cw, which="cook",
     cutoff=cut_cw, sort=TRUE)

# Influyentes a nivel país

cut_c <- 4/sqrt(22)

plot(estex.c, which="cook",
     cutoff=cut_c, sort=TRUE)

# Uruguay y Bolivia aparecen como influyentes
```

## Cohesión General

```{r}
#| eval: false

# Modelo 1: Nivel individual
m1 <- lmer(cohesion_general_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + ola_s + (1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)

# Modelo 2: Nivel Ola Pais
m2 <- lmer(cohesion_general_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + ola_s + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
(1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)


# Modelo 3: Nivel País
m3 <- lmer(cohesion_general_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica + ola_s + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
(1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)

# Modelo 4: Interacciones
m4 <- lmer(cohesion_general_ind ~ 1 + ola_s + nivel_educ + sexo + edad_c + I(edad_c^2) + pos_politica +  + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we + 
  (1 | country_wave) + (1 | pais), data= datos_fit, weights= wt)



save(m1, file="output/modelo_general_1.rdata")
save(m2, file="output/modelo_general_2.rdata")
save(m3, file="output/modelo_general_3.rdata")
save(m4, file="output/modelo_general_4.rdata")


```

```{r}
#| label: tbl-modelos-general
#| tbl-cap: Modelos para cohesión social
#| results: asis

load("output/modelo_general_1.rdata")
load("output/modelo_general_2.rdata")
load("output/modelo_general_3.rdata")
load("output/modelo_general_4.rdata")

sjPlot::tab_model(m1, m2, m3, m4,
                  show.ci = FALSE,
                  dv.labels = c("m1", "m2", "m3", "m4"))

```


```{r}
#| eval: false

# estex.cw <- influence(m4, "country_wave")

# 
# # Casos influyentes a nivel ola-país
# 
# cooks_cw <- cooks.distance(estex.cw, sort = T)
# cut_cw <- 4/sqrt(130)
# 
# plot(estex.cw, which="cook",
#      cutoff=cut_cw, sort=TRUE)

# Influyentes a nivel país

estex.c <- influence.ME::influence(m5, "pais")
cooks_c <- cooks.distance(estex.c, sort = T)
cut_c <- 4/sqrt(22)

plot(estex.c, which="cook",
     cutoff=cut_c, sort=TRUE)

# De nuevo Bolivia y Uruguay
```


### Modelo finales

```{r}
p <- sjPlot::plot_models(m4_h, m4_v, m4,
                    grid  = T,
                    rm.terms = c("pib_we",
                                 "I(edad_c^2)",
                                 "gini_we",
                                 "edu_we",
                                 "pib_be",
                                 "dem_be",
                                 "mig_be",
                                 "gini_be:edu_be",
                                 "gini_we:edu_be",
                                 "ola_s:mig_be",
                                 "ola_s:wgi_we",
                                 "wgi_we",
                                 "mig_we:wgi_be"),
                     m.labels= c("Cohesión Horizontal",
                                 "Cohesión Vertical",
                                 "Cohesión Social"),
                     axis.labels =
                       c("Pob. Educ. Terciaria (between)",
                         "Pob. Migrante (within)",
                             "Gobernanza (between)",
                             "Democracia (within)",
                         "Gini (between)",
                         "Derecha (ref=Sin posición)",
                         "Centro (ref=Sin posición)",
                         "Izquierda (ref=Sin posición)",
                         "Edad",
                         "Hombre (ref=Mujer)",
                         "Educ. Secundaria (ref=Terciaria)",
                         "Educ. Primaria (ref=Terciaria)",
                         "Ola"),
                    show.p = T,
                    show.legend = F,
                    show.values = T
                    )


p <- p +
  labs(
    caption = "Nota: Se muestran solo los efectos estadísticamente significativos. \n* p < 0.05; ** p < 0.01; *** p < 0.001"
  ) +
  theme_minimal(base_size = 11) +
  theme(
    plot.caption = element_text(hjust = 0, face = "italic", size = 9),
    axis.text = element_text(size = 10))

print(p)
```

