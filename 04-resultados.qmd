# Resultados

```{r}
#| echo: false

## cargar base

load("input/proc/datos-completos.rdata")
load("input/proc/micro-macro-merge.rdata")

datos_merge_b <- datos_merge_b |>
  mutate(across(where(haven::is.labelled), ~ vctrs::vec_data(.)),
         pais= as.factor(pais))

datos_merge_b$country_wave = do.call(paste, c(datos_merge_b[c("pais", "ola")], sep = "_"))

```

## Descriptivos

```{r}
#| label: fig-ch
#| fig-cap: Evolución dimensiones Cohesión Horizontal (2004-2022)


olas <- datos_merge_b |>
  group_by(ola) |>
  summarise(seguridad_prom = mean(seguridad_ind, na.rm=T),
            confianza_prom = mean(confianza_it_ind, na.rm=T)) |>
  pivot_longer(
    cols = c(confianza_prom, seguridad_prom),
    names_to = "indicador",
    values_to = "promedio"
  ) |>
  mutate(indicador = recode(indicador,
                            "confianza_prom" = "Confianza Interpersonal",
                            "seguridad_prom" = "Seguridad Pública"))
olas |>
  ggplot(aes(x = ola, y = promedio, color=indicador)) +
  geom_line(linewidth = 1) +
  geom_point() +
  labs(x = "Ola", y = "Promedio", color=NULL) +
  theme_minimal() + 
  theme(legend.position = "bottom")

```


```{r}
#| label: fig-cv
#| fig-cap: Evolución dimensiones Cohesión Vertical (2004-2022)

olas <- datos_merge_b |>
  group_by(ola) |>
  summarise(confianza_prom = mean(confianza_inst_ind, na.rm=T),
            democracia_prom = mean(democracia_ind, na.rm=T)) |>
  pivot_longer(
    cols = c(confianza_prom, democracia_prom),
    names_to = "indicador",
    values_to = "promedio"
  ) |>
  mutate(indicador = recode(indicador,
                            "confianza_prom" = "Confianza en las Instituciones",
                            "democracia_prom" = "Actitudes hacia la democracia"))
olas |>
  ggplot(aes(x = ola, y = promedio, color=indicador)) +
  geom_line(linewidth = 1) +
  geom_point() +
  labs(x = "Ola", y = "Promedio", color=NULL) +
  theme_minimal() + 
  theme(legend.position = "bottom")

```

```{r}
#| label: fig-correlación
#| fig-cap: "Correlación subdimensiones de la Cohesión Social"
#| results: asis


chart.Correlation(datos_wide %>%
                    na.omit() |>
                    select(c("Confianza Interpersonal",
                             "Seguridad Pública",
                             "Confianza en las Instituciones",
                             "Actitudes a la Democracia")))

```

## Análisis Factorial Confirmatorio

```{r}
#| label: afc
#| fig-cap: Análisis Factorial Confirmatorio Modelo de Medición de Cohesión Social

m1 <- 'ch =~ seguridad_ind + confianza_it_ind
       cv =~ confianza_inst_ind + democracia_ind'

m1_cfa <- cfa(
  m1, data = datos_merge_b, std.lv = TRUE)

semPaths(m1_cfa,
         what = "std",
        label.cex = 1, edge.label.cex = 1, # tamaño flechas y caracteres
        residuals = FALSE, # no mostrar residuos
        edge.color = "black") # color flechas

fit <- fitmeasures(m1_cfa, fit.measures = c("rmsea", "cfi", "chisq", "pvalue", "df"))

```
Nota. RMSEA = `r round(fit["rmsea"], 3)`, CFI = `r round(fit["cfi"], 3)`, Chi-cuadrado = `r round(fit["chisq"], 2)`, gl = `r fit["df"]`, p-valor = `r round(fit["pvalue"], 3)`.


```{r}
#| label: fig-cs
#| tab-cap: Evolución dimensiones Cohesión Social (2004-2022)

olas <- datos_merge_b |>
  group_by(ola) |>
  summarise(horizontal_prom = mean(`cohesion_horizontal_ind`, na.rm=T),
            vertical_prom = mean(`cohesion_vertical_ind`, na.rm=T),
            cohesion_prom = mean(`cohesion_general_ind`, na.rm=T)) |>
  pivot_longer(
    cols = c(horizontal_prom, vertical_prom, cohesion_prom),
    names_to = "indicador",
    values_to = "promedio"
  ) |>
  mutate(indicador = recode(indicador,
                            horizontal_prom = "Cohesión Horizontal",
                            vertical_prom = "Cohesión Vertical",
                            cohesion_prom = "Cohesión Social"))

olas |>
  ggplot(aes(x = ola, y = promedio, color=indicador)) +
  geom_line(linewidth = 1) +
  geom_point() +
  labs(x = "Ola", y = "Promedio", color=NULL) +
  theme_minimal() + 
  theme(legend.position = "bottom")

```

## Modelos Multinivel

```{r}
#| label: preparacion-datos

## Estandarizar continuos tras separar W/B (recomendado)
z <- function(x) as.numeric(scale(x))

datos_merge_b <- datos_merge_b %>%
  mutate(
    pib_we  = z(pib_we),   gini_we = z(gini_we), wgi_we = z(wgi_we), dem_we = z(dem_we),
    mig_we  = z(mig_we),   edu_we = z(edu_we),
    pib_be  = z(pib_be),   gini_be = z(gini_be), wgi_be = z(wgi_be), dem_be = z(dem_be),
    mig_be  = z(mig_be),   edu_be = z(edu_be),
    edad_c = scale(edad) %>% as.numeric()
  ) |>
  select(cohesion_general_ind, cohesion_vertical_ind, cohesion_horizontal_ind,
         nivel_educ, sexo, edad_c, ola, pos_politica,
         pib_we, gini_we, dem_we, wgi_we, mig_we, edu_we,
         pib_be, gini_be, dem_be, wgi_be, mig_be, edu_be,
         country_wave, pais, wt) |> na.omit()


```

```{r}
#| label: modelos-nulos

m0_ch = lmer(cohesion_horizontal_ind ~ 1 + (1 | country_wave) + (1 |pais), data=datos_merge_b, weights=wt)

icc(m0_ch, by_group=TRUE) # 2.3% y 5.6%

m0_cv = lmer(cohesion_vertical_ind ~ 1 + (1 | country_wave) + (1 |pais), data=datos_merge_b, weights=wt)

icc(m0_cv, by_group=TRUE) # 6.3% y 6.3%

m0_cs = lmer(cohesion_general_ind ~ 1 + (1 | country_wave) + (1 |pais), data=datos_merge_b, weights=wt)

icc(m0_cs, by_group=TRUE) # 4.9% y 7.5%
```


```{r}
#| label: tbl-modelos-horizontal
#| tbl-cap: Modelos para cohesión horizontal 
#| results: asis


# Modelo 1: Nivel individual
m1 <- lmer(cohesion_horizontal_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + (1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

# Modelo 2: Nivel Ola Pais
m2 <- lmer(cohesion_horizontal_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)


# Modelo 3: Nivel País
m3 <- lmer(cohesion_horizontal_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

# Modelo 4: Interacciones
m4 <- lmer(cohesion_horizontal_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

sjPlot::tab_model(m1, m2, m3, m4,
                  show.ci = FALSE,
                  dv.labels = c("m1", "m2", "m3", "m4"))

m5 <- lmer(cohesion_horizontal_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
  scale(ola):mig_be +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)


sjPlot::tab_model(m4, m5,
                  show.ci = FALSE,
                  dv.labels = c("m4", "m5"))

```


```{r}
#| eval: false

p_load(influence.ME)

estex.cw <- influence(m4, "country_wave")
estex.c <- influence(m4, "pais")

# Casos influyentes a nivel ola-país

cooks_cw <- cooks.distance(estex.cw, sort = T)
cut_cw <- 4/sqrt(130)

plot(estex.cw, which="cook",
     cutoff=cut_cw, sort=TRUE)

# Influyentes a nivel país

cut_c <- 4/sqrt(22)

plot(estex.c, which="cook",
     cutoff=cut_c, sort=TRUE)
```


```{r}
#| label: tbl-modelos-vertical
#| tbl-cap: Modelos para cohesión vertical
#| results: asis

# Modelo 1: Nivel individual
m1 <- lmer(cohesion_general_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + (1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

# Modelo 2: Nivel scale(ola) Pais
m2 <- lmer(cohesion_vertical_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)


# Modelo 3: Nivel País
m3 <- lmer(cohesion_vertical_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

# Modelo 4: Interacciones
m4 <- lmer(cohesion_vertical_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

sjPlot::tab_model(m1, m2, m3, m4,
                  show.ci = FALSE,
                  dv.labels = c("m1", "m2", "m3", "m4"))

m5 <- lmer(cohesion_vertical_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
  scale(ola):wgi_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

sjPlot::tab_model(m4, m5,
                  show.ci = FALSE,
                  dv.labels = c("m4", "m5"))


```

```{r}
#| eval: false

estex.cw <- influence(m4, "country_wave")
estex.c <- influence(m4, "pais")

# Casos influyentes a nivel ola-país

cooks_cw <- cooks.distance(estex.cw, sort = T)
cut_cw <- 4/sqrt(130)

plot(estex.cw, which="cook",
     cutoff=cut_cw, sort=TRUE)

# Influyentes a nivel país

cut_c <- 4/sqrt(22)

plot(estex.c, which="cook",
     cutoff=cut_c, sort=TRUE)

# Uruguay y Bolivia aparecen como influyentes
```
```{r}
data_cut <- datos_merge_b |> filter(pais!="Uruguay" & pais!="Bolivia")

m5 <- lmer(cohesion_vertical_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
(1 | country_wave) + (1 | pais), data= data_cut, weights= wt)

sjPlot::tab_model(m4, m5,
                  show.ci = FALSE,
                  dv.labels = c("completo", "sin influyentes"))
```



```{r}
#| label: tbl-modelos-general
#| tbl-cap: Modelos para cohesión social
#| results: asis

# Modelo 1: Nivel individual
m1 <- lmer(cohesion_general_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + (1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

# Modelo 2: Nivel scale(ola) Pais
m2 <- lmer(cohesion_general_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

# Modelo 3: Nivel País
m3 <- lmer(cohesion_general_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

# Modelo 4: Interacciones
m4 <- lmer(cohesion_general_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

sjPlot::tab_model(m1, m2, m3, m4,
                  show.ci = FALSE,
                  dv.labels = c("m1", "m2", "m3", "m4"))

m5 <- lmer(cohesion_general_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
  scale(ola):wgi_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

sjPlot::tab_model(m4, m5,
                  show.ci = FALSE,
                  dv.labels = c("m4", "m5"))


```

```{r}
#| eval: false

# estex.cw <- influence(m4, "country_wave")

# 
# # Casos influyentes a nivel ola-país
# 
# cooks_cw <- cooks.distance(estex.cw, sort = T)
# cut_cw <- 4/sqrt(130)
# 
# plot(estex.cw, which="cook",
#      cutoff=cut_cw, sort=TRUE)

# Influyentes a nivel país

estex.c <- influence.ME::influence(m5, "pais")
cooks_c <- cooks.distance(estex.c, sort = T)
cut_c <- 4/sqrt(22)

plot(estex.c, which="cook",
     cutoff=cut_c, sort=TRUE)

# De nuevo Bolivia y Uruguay
```

```{r}

m6 <- lmer(cohesion_general_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
  scale(ola):wgi_we +
  scale(ola):edu_we +
(1 | country_wave) + (1 | pais), data= data_cut, weights= wt)

sjPlot::tab_model(m5, m6,
                  show.ci = FALSE,
                  dv.labels = c("completo", "sin influyentes"))
```


### Modelo finales


```{r}
mh <- lmer(cohesion_horizontal_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
  scale(ola):mig_be +
(1 + pib_we | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

mv <- lmer(cohesion_vertical_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
  scale(ola):wgi_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

mc <- lmer(cohesion_general_ind ~ 1 + factor(nivel_educ) + factor(sexo) + edad_c + I(edad_c^2) + factor(pos_politica) + scale(ola) + 
pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
mig_we:wgi_be +
edu_be:gini_be +
  edu_be:gini_we +
  scale(ola):wgi_we +
(1 | country_wave) + (1 | pais), data= datos_merge_b, weights= wt)

# sjPlot::tab_model(mh, mv, mc,
#                   show.ci = FALSE,
#                   dv.labels = c("Cohesión Horizontal",
#                                 "Cohesión Vertical",
#                                 "Cohesión General"))
# 
# plot_completo <- plot_model(mc,
#             std.est = TRUE,  # estandariza los coeficientes (opcional)
#             show.values = TRUE,
#             show.legend = TRUE,
#             value.offset = .3,
#            terms = c("scale(ola)",
#                      "pib_we",
#                      "gini_we",
#                      "dem_we",
#                      "wgi_we",
#                      "mig_we",
#                      "edu_we",
#                      "pib_be",
#                      "gini_be",
#                      "dem_be",
#                      "wgi_be",
#                      "mig_be",
#                      "edu_be",
#                      "mig_we:wgi_be",
#                      "gini_be:edu_be",
#                      "gini_we:edu_be"),
#            axis.labels = c("Gini (within) x Educación (between)",
#                             "Gini (between) x Educación (between)",
#                             "Migración (within) x Gobernanza (between)",
#                             "Pob. Educ. Terciaria",
#                             "Pob. Migrante",
#                             "Gobernanza",
#                             "Democracia",
#                             "Gini",
#                             "PIB",
#                             "Pob. Educ. Terciaria",
#                             "Pob. Migrante",
#                               "Gobernanza",
#                             "Democracia",
#                           "Gini",
#                           "PIB per capita",
#                           "Ola"),
#            title= "Modelo de Cohesión General"
# )
# 
# plot_horizontal <- plot_model(mh,
#             std.est = TRUE,  # estandariza los coeficientes (opcional)
#             show.values = TRUE,
#             show.legend = TRUE,
#             value.offset = .3,
#            terms = c("scale(ola)",
#                      "pib_we",
#                      "gini_we",
#                      "dem_we",
#                      "wgi_we",
#                      "mig_we",
#                      "edu_we",
#                      "pib_be",
#                      "gini_be",
#                      "dem_be",
#                      "wgi_be",
#                      "mig_be",
#                      "edu_be",
#                      "mig_we:wgi_be",
#                      "gini_be:edu_be",
#                      "gini_we:edu_be"),
#            axis.labels = c("Gini (within) x Educación (between)",
#                             "Gini (between) x Educación (between)",
#                             "Migración (within) x Gobernanza (between)",
#                             "Pob. Educ. Terciaria",
#                             "Pob. Migrante",
#                             "Gobernanza",
#                             "Democracia",
#                             "Gini",
#                             "PIB",
#                             "Pob. Educ. Terciaria",
#                             "Pob. Migrante",
#                               "Gobernanza",
#                             "Democracia",
#                           "Gini",
#                           "PIB per capita",
#                           "Ola"),
#            title= "Modelo de Cohesión Horizontal"
# )
# 
# plot_vertical <- plot_model(mv,
#             std.est = TRUE,  # estandariza los coeficientes (opcional)
#             show.values = TRUE,
#             show.legend = TRUE,
#             value.offset = .3,
#            terms = c("scale(ola)",
#                      "pib_we",
#                      "gini_we",
#                      "dem_we",
#                      "wgi_we",
#                      "mig_we",
#                      "edu_we",
#                      "pib_be",
#                      "gini_be",
#                      "dem_be",
#                      "wgi_be",
#                      "mig_be",
#                      "edu_be",
#                      "mig_we:wgi_be",
#                      "gini_be:edu_be",
#                      "gini_we:edu_be"),
#            axis.labels = c("Gini (within) x Educación (between)",
#                             "Gini (between) x Educación (between)",
#                             "Migración (within) x Gobernanza (between)",
#                             "Pob. Educ. Terciaria",
#                             "Pob. Migrante",
#                             "Gobernanza",
#                             "Democracia",
#                             "Gini",
#                             "PIB",
#                             "Pob. Educ. Terciaria",
#                             "Pob. Migrante",
#                               "Gobernanza",
#                             "Democracia",
#                           "Gini",
#                           "PIB per capita",
#                           "Ola"),
#            title= "Modelo de Cohesión Vertical"
# )


sjPlot::plot_models(mh, mv, mc, grid  = T,
                    std.est = T,
                    rm.terms = c("factor(nivel_educ)Secondary",
                                 "factor(nivel_educ)Tertiary",
                                 "factor(sexo)Male",
                                 "edad_c",
                                 "I(edad_c^2)",
                                 "factor(pos_politica)Center",
                                 "factor(pos_politica)Right",
                                 "factor(pos_politica)Not declared",
                                 "scale(ola):mig_be",
                                 "scale(ola):wgi_we"),
                    m.labels= c("Cohesión Horizontal",
                                "Cohesión Vertical",
                                "Cohesión Social"),
                    axis.labels = c("Gini (within) x Educación (between)",
                            "Gini (between) x Educación (between)",
                            "Migración (within) x Gobernanza (between)",
                            "Pob. Educ. Terciaria (between)",
                            "Pob. Migrante (between)",
                            "Gobernanza (between)",
                            "Democracia (between)",
                            "Gini (between)",
                            "PIB (between)",
                            "Pob. Educ. Terciaria (within)",
                            "Pob. Migrante (within)",
                              "Gobernanza (within)",
                            "Democracia (within)",
                          "Gini (within)",
                          "PIB per capita (within)",
                          "Ola"),
                    show.p = T,
                    show.legend = F,
                    show.values = T
                    )
```

## Desigualdad Económica

### Bivariado

```{r}

datos_merge_b |>
  filter(ola == 2023) |>
  group_by(pais) |>
  summarise(
    gini_prom = mean(gini_index, na.rm = TRUE),
    confianza_vertical = mean(cohesion_vertical_ind, na.rm = TRUE)
  ) |>
  ggplot(aes(x = gini_prom, y = confianza_vertical, label = pais)) +
  geom_point(color = "#4E79A7", size = 3, alpha = 0.8) +
  geom_smooth(method = "lm", se = FALSE, color = "gray40", linetype = "dashed") +
  geom_text_repel(size = 3, max.overlaps = 20) +
  labs(
    x = "Desigualdad (Gini promedio)",
    y = "Cohesión Vertical (promedio)",
    title = "Relación entre desigualdad y Cohesión Vertical (Ola 2023)"
  ) +
  theme_minimal(base_size = 13)
  

  
```


### Efectos Within

```{r}

datos_fit <- datos_merge_b |>
  dplyr::mutate(
    ola_s = as.numeric(scale(ola, center = TRUE, scale = TRUE)),
    nivel_educ   = forcats::fct_drop(factor(nivel_educ)),
    sexo         = forcats::fct_drop(factor(sexo)),
    pos_politica = forcats::fct_drop(factor(pos_politica)),
    pais         = forcats::fct_drop(factor(pais)),
    country_wave = forcats::fct_drop(factor(country_wave))
  )

m_gini <- lme4::lmer(
  cohesion_general_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) +
    pos_politica + ola_s +
    pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
    pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
    mig_we:wgi_be + edu_be:gini_be + edu_be:gini_we + ola_s:wgi_we +
    (1 | country_wave) + (1 + gini_we | pais),
  data = datos_fit, weights = wt
)

# Ahora sí puedes usar ggeffects sin error:
ge_gini <- ggpredict(m_gini, terms = c("gini_we [all]", "pais [all]"),
                    type = "random")

library(scales)   # para hue_pal()
n <- length(unique(as.data.frame(ge_gini)$group))  # nº de países en el objeto ggeffects
cols <- hue_pal()(n)                          # genera n colores distintos

plot(ge_gini, show_ci = FALSE, color= cols)

### Destacar a Chile ----

# Convertir a data.frame
df <- as.data.frame(ge_gini)

# País a destacar
focus_country <- "Chile"

# Definir colores
cols <- ifelse(df$group == focus_country, "Chile", "Otros")
df$highlight <- factor(cols, levels = c("Otros", "Chile"))

ggplot(df, aes(x = x, y = predicted, group = group)) +
  geom_line(aes(color = highlight, size = highlight), alpha = 0.9) +
  scale_color_manual(values = c("Otros" = "gray80", "Chile" = "#e41a1c")) +
  scale_size_manual(values = c("Otros" = 0.6, "Chile" = 1.3)) +
  labs(
    x = "Gini (within)",
    y = "Cohesión social predicha",
    title = "Efecto within del Gini sobre la cohesión social",
    subtitle = paste("País destacado:", focus_country)
  ) +
  theme_minimal(base_size = 13) +
  theme(legend.position = "none")

### Comparar con otros países ----

# Países a destacar
focus <- c("Uruguay", "Chile", "Colombia", "Peru", "Dominican Republic")

# Etiqueta de énfasis
df <- df %>%
  mutate(is_focus = group %in% focus)

# Último punto para etiquetas
df_end <- df %>%
  group_by(group) %>%
  slice_max(x, n = 1) %>%
  ungroup()

# Colores manuales
color_map <- c(
  "Uruguay"   = "#e41a1c",
  "Brazil"    = "#377eb8",
  "Chile"     = "#4daf4a",
  "Canada" = "#984ea3",
  "Colombia" = "#ff7f00",
  "United States" = "#ffff33",
  "Peru" = "#a65628",
  "Dominican Republic" = "#f781bf"
)

# Gráfico
ggplot() +
  # Todas las líneas grises primero (background)
  geom_line(
    data = df %>% filter(!is_focus),
    aes(x = x, y = predicted, group = group),
    color = "gray80", linewidth = 0.5, alpha = 0.8
  ) +
  # Luego las líneas destacadas encima
  geom_line(
    data = df %>% filter(is_focus),
    aes(x = x, y = predicted, color = group),
    linewidth = 1.3
  ) +
  # Etiquetas al final de las destacadas
  geom_text_repel(
    data = df_end %>% filter(group %in% focus),
    aes(x = x, y = predicted, label = group, color = group),
    nudge_x = 0.25, direction = "y", hjust = 0,
    size = 3.5, segment.color = NA, show.legend = FALSE
  ) +
  scale_color_manual(values = color_map) +
  labs(
    x = "Gini (within)",
    y = "Cohesión social predicha",
    title = "Efecto within del Gini sobre la cohesión social",
    subtitle = "Uruguay, Brasil, Chile y Argentina destacados"
  ) +
  coord_cartesian(clip = "off") +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "none",
    plot.margin = margin(5, 60, 5, 5)
  )


gini <- datos_merge_b |>
  group_by(pais) |>
  summarise(gini_prom = mean(gini_be, na.rm=T))
```

### Efectos Between

```{r}
m_gini <- lme4::lmer(
  cohesion_general_ind ~ 1 + nivel_educ + sexo + edad_c + I(edad_c^2) +
    pos_politica + ola_s +
    pib_we + gini_we + dem_we + wgi_we + mig_we + edu_we +
    pib_be + gini_be + dem_be + wgi_be + mig_be + edu_be +
    mig_we:wgi_be + edu_be:gini_be + edu_be:gini_we + ola_s:wgi_we +
    (1 | country_wave) + (1 + gini_be | pais),
  data = datos_fit, weights = wt
)

# Ahora sí puedes usar ggeffects sin error:
ge_gini <- ggpredict(m_gini, terms = c("gini_be [all]", "pais [all]"),
                    type = "random")

library(scales)   # para hue_pal()
n <- length(unique(as.data.frame(ge_gini)$group))  # nº de países en el objeto ggeffects
cols <- hue_pal()(n)                          # genera n colores distintos

plot(ge_gini, show_ci = FALSE, color= cols)


## Destacar Chile

# Convertir a data.frame
df <- as.data.frame(ge_gini)

# País a destacar
focus_country <- "Chile"

# Definir colores
cols <- ifelse(df$group == focus_country, "Chile", "Otros")
df$highlight <- factor(cols, levels = c("Otros", "Chile"))

ggplot(df, aes(x = x, y = predicted, group = group)) +
  geom_line(aes(color = highlight, size = highlight), alpha = 0.9) +
  scale_color_manual(values = c("Otros" = "gray80", "Chile" = "#e41a1c")) +
  scale_size_manual(values = c("Otros" = 0.6, "Chile" = 1.3)) +
  labs(
    x = "Gini (between)",
    y = "Cohesión social predicha",
    title = "Efecto within del Gini sobre la cohesión social",
    subtitle = paste("País destacado:", focus_country)
  ) +
  theme_minimal(base_size = 13) +
  theme(legend.position = "none")

### Comparar con otros países ----


# Países a destacar
focus <- c("Uruguay", "Chile", "Colombia", "Canada", "Brazil")

# Etiqueta de énfasis
df <- df %>%
  mutate(is_focus = group %in% focus)

# Último punto para etiquetas
df_end <- df %>%
  group_by(group) %>%
  slice_max(x, n = 1) %>%
  ungroup()

# Colores manuales
color_map <- c(
  "Uruguay"   = "#e41a1c",
  "Brazil"    = "#377eb8",
  "Chile"     = "#4daf4a",
  "Canada" = "#984ea3",
  "Colombia" = "#ff7f00",
  "United States" = "#ffff33",
  "Peru" = "#a65628",
  "Dominican Republic" = "#f781bf"
)

# Gráfico
ggplot() +
  # Todas las líneas grises primero (background)
  geom_line(
    data = df %>% filter(!is_focus),
    aes(x = x, y = predicted, group = group),
    color = "gray80", linewidth = 0.5, alpha = 0.8
  ) +
  # Luego las líneas destacadas encima
  geom_line(
    data = df %>% filter(is_focus),
    aes(x = x, y = predicted, color = group),
    linewidth = 1.3
  ) +
  # Etiquetas al final de las destacadas
  geom_text_repel(
    data = df_end %>% filter(group %in% focus),
    aes(x = x, y = predicted, label = group, color = group),
    nudge_x = 0.25, direction = "y", hjust = 0,
    size = 3.5, segment.color = NA, show.legend = FALSE
  ) +
  scale_color_manual(values = color_map) +
  labs(
    x = "Gini (within)",
    y = "Cohesión social predicha",
    title = "Efecto within del Gini sobre la cohesión social",
    subtitle = "Uruguay, Brasil, Chile y Argentina destacados"
  ) +
  coord_cartesian(clip = "off") +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "none",
    plot.margin = margin(5, 60, 5, 5)
  )

```


